// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// GuidesColumns holds the columns for the "guides" table.
	GuidesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true, Size: 12},
		{Name: "recipient", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "status", Type: field.TypeString, Nullable: true, Size: 30},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "operator_guide", Type: field.TypeInt, Nullable: true},
	}
	// GuidesTable holds the schema information for the "guides" table.
	GuidesTable = &schema.Table{
		Name:       "guides",
		Columns:    GuidesColumns,
		PrimaryKey: []*schema.Column{GuidesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "guides_operators_guide",
				Columns:    []*schema.Column{GuidesColumns[6]},
				RefColumns: []*schema.Column{OperatorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// GuideHistoriesColumns holds the columns for the "guide_histories" table.
	GuideHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeString, Nullable: true, Size: 30},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "guide_history", Type: field.TypeInt},
		{Name: "operator_guide_history", Type: field.TypeInt, Nullable: true},
	}
	// GuideHistoriesTable holds the schema information for the "guide_histories" table.
	GuideHistoriesTable = &schema.Table{
		Name:       "guide_histories",
		Columns:    GuideHistoriesColumns,
		PrimaryKey: []*schema.Column{GuideHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "guide_histories_guides_history",
				Columns:    []*schema.Column{GuideHistoriesColumns[3]},
				RefColumns: []*schema.Column{GuidesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "guide_histories_operators_guide_history",
				Columns:    []*schema.Column{GuideHistoriesColumns[4]},
				RefColumns: []*schema.Column{OperatorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OperatorsColumns holds the columns for the "operators" table.
	OperatorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "account", Type: field.TypeString, Unique: true},
		{Name: "enabled", Type: field.TypeBool},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// OperatorsTable holds the schema information for the "operators" table.
	OperatorsTable = &schema.Table{
		Name:       "operators",
		Columns:    OperatorsColumns,
		PrimaryKey: []*schema.Column{OperatorsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		GuidesTable,
		GuideHistoriesTable,
		OperatorsTable,
	}
)

func init() {
	GuidesTable.ForeignKeys[0].RefTable = OperatorsTable
	GuideHistoriesTable.ForeignKeys[0].RefTable = GuidesTable
	GuideHistoriesTable.ForeignKeys[1].RefTable = OperatorsTable
}
